{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-3\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"row justify-content-end\\\"><div class=\\\"col-md-4\\\"><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Digite aqui...\\\"><div class=\\\"input-group-append\\\"><button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\"> Buscar </button></div></div></div></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString($props.tasks) + \" \", 1 /* TEXT */), _hoisted_2]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$props","tasks","_hoisted_2"],"sources":["/home/alexandre/code/ponto-eletronico/src/components/FilterComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-3\">\n    {{ tasks }}\n    <div class=\"row justify-content-end\">\n      <div class=\"col-md-4\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Digite aqui...\"\n          />\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-outline-secondary\" type=\"button\">\n              Buscar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    tasks: {\n      type: Array,\n      default: () => {\n        return [];\n      },\n    },\n  },\n  setup() {\n    const viewModel = ref([\n\n    ]);\n    return {\n      viewModel,\n    };\n  },\n  methods: {\n    buscarTempoGastoPorTarefa(nomeDaTarefa) {\n      let tempoTotal = 0;\n\n      this.tasks.forEach((item) => {\n        item.data.tarefas.forEach((tarefa) => {\n          if (\n            tarefa.descricao.toLowerCase().includes(nomeDaTarefa.toLowerCase())\n          ) {\n            const tempoGastoEmMinutos =\n              tarefa.horaFim.horas * 60 +\n              tarefa.horaFim.minutos -\n              (tarefa.horaInicio.horas * 60 + tarefa.horaInicio.minutos);\n\n            tempoTotal += tempoGastoEmMinutos;\n          }\n        });\n      });\n\n      const horas = Math.floor(tempoTotal / 60);\n      const minutos = tempoTotal % 60;\n      return `${horas}:${minutos}`;\n    },\n  },\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;;uBAA3BC,mBAAA,CAkBM,OAlBNC,UAkBM,G,kCAjBDC,MAAA,CAAAC,KAAK,IAAG,GACX,iBAAAC,UAeM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}