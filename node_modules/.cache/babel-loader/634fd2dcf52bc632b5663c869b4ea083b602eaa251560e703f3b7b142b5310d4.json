{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase, get, ref, push, set } from \"firebase/database\";\nexport default {\n  data() {\n    return {\n      registros: []\n    };\n  },\n  methods: {\n    async iniciarPonto() {\n      const auth = getAuth();\n      const user = auth.currentUser;\n      const db = getDatabase();\n      const pontoRef = ref(db, \"pontos\");\n      try {\n        const dateNow = new Date();\n        const novoRegistro = {\n          dataHora: dateNow.toString(),\n          dataInicio: \"asd\",\n          tarefas: [{\n            tarefa: \"asd\"\n          }]\n        };\n\n        // Adiciona um novo registro no Realtime Database\n        const novoRegistroRef = push(pontoRef);\n        await set(novoRegistroRef, {\n          ...novoRegistro,\n          userId: user.uid\n        });\n        console.log(\"Registro de ponto salvo com sucesso:\", novoRegistroRef.key);\n\n        // Atualiza a lista de registros na interface do usuário\n        this.registros.push({\n          ...novoRegistro,\n          id: novoRegistroRef.key\n        });\n      } catch (error) {\n        console.error(\"Erro ao marcar ponto:\", error.message);\n      }\n    },\n    async pararPonto() {},\n    async pausarPonto() {}\n  },\n  async created() {\n    const db = getDatabase();\n    const pontoRef = ref(db, \"pontos\");\n\n    // Consulta os registros de ponto do usuário no Realtime Database\n    // Este exemplo apenas carrega os últimos 10 registros, você pode ajustar conforme necessário\n    const snapshot = await get(pontoRef, \"value\");\n    const registros = [];\n    if (snapshot.exists()) {\n      snapshot.forEach(childSnapshot => {\n        const key = childSnapshot.key;\n        const data = childSnapshot.val();\n        registros.push({\n          key,\n          ...data\n        });\n      });\n    }\n    this.registros = registros;\n  }\n};","map":{"version":3,"names":["getAuth","getDatabase","get","ref","push","set","data","registros","methods","iniciarPonto","auth","user","currentUser","db","pontoRef","dateNow","Date","novoRegistro","dataHora","toString","dataInicio","tarefas","tarefa","novoRegistroRef","userId","uid","console","log","key","id","error","message","pararPonto","pausarPonto","created","snapshot","exists","forEach","childSnapshot","val"],"sources":["/home/alexandre/code/ponto-eletronico/src/components/ClockInClockOut.vue"],"sourcesContent":["<!-- PontoEletronico.vue -->\n<template>\n  <div>\n    <h1>Marcação de Ponto Eletrônico</h1>\n    <button @click=\"iniciarPonto\">iniciar</button>\n    <button @click=\"pararPonto\">Finalizar</button>\n    <button @click=\"pausarPonto\">Pausar</button>\n    <ul>\n      <li v-for=\"registro in registros\" :key=\"registro.id\">\n        {{ registro.dataHora }} - {{ registro.status }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase, get, ref, push, set } from \"firebase/database\";\n\nexport default {\n  data() {\n    return {\n      registros: [],\n    };\n  },\n  methods: {\n    async iniciarPonto() {\n      const auth = getAuth();\n      const user = auth.currentUser;\n\n      const db = getDatabase();\n      const pontoRef = ref(db, \"pontos\");\n\n      try {\n        const dateNow = new Date();\n        const novoRegistro = {\n          dataHora: dateNow.toString(),\n          dataInicio: \"asd\",\n          tarefas: [{ tarefa: \"asd\" }],\n        };\n\n        // Adiciona um novo registro no Realtime Database\n        const novoRegistroRef = push(pontoRef);\n        await set(novoRegistroRef, {\n          ...novoRegistro,\n          userId: user.uid,\n        });\n\n        console.log(\n          \"Registro de ponto salvo com sucesso:\",\n          novoRegistroRef.key\n        );\n\n        // Atualiza a lista de registros na interface do usuário\n        this.registros.push({ ...novoRegistro, id: novoRegistroRef.key });\n      } catch (error) {\n        console.error(\"Erro ao marcar ponto:\", error.message);\n      }\n    },\n    async pararPonto() {},\n    async pausarPonto() {},\n  },\n  async created() {\n    const db = getDatabase();\n    const pontoRef = ref(db, \"pontos\");\n\n    // Consulta os registros de ponto do usuário no Realtime Database\n    // Este exemplo apenas carrega os últimos 10 registros, você pode ajustar conforme necessário\n    const snapshot = await get(pontoRef, \"value\");\n    const registros = [];\n\n    if (snapshot.exists()) {\n      snapshot.forEach((childSnapshot) => {\n        const key = childSnapshot.key;\n        const data = childSnapshot.val();\n        registros.push({ key, ...data });\n      });\n    }\n\n    this.registros = registros;\n  },\n};\n</script>\n"],"mappings":";AAgBA,SAASA,OAAM,QAAS,eAAe;AACvC,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAE,QAAS,mBAAmB;AAEpE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,MAAMC,IAAG,GAAIV,OAAO,CAAC,CAAC;MACtB,MAAMW,IAAG,GAAID,IAAI,CAACE,WAAW;MAE7B,MAAMC,EAAC,GAAIZ,WAAW,CAAC,CAAC;MACxB,MAAMa,QAAO,GAAIX,GAAG,CAACU,EAAE,EAAE,QAAQ,CAAC;MAElC,IAAI;QACF,MAAME,OAAM,GAAI,IAAIC,IAAI,CAAC,CAAC;QAC1B,MAAMC,YAAW,GAAI;UACnBC,QAAQ,EAAEH,OAAO,CAACI,QAAQ,CAAC,CAAC;UAC5BC,UAAU,EAAE,KAAK;UACjBC,OAAO,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAM,CAAC;QAC7B,CAAC;;QAED;QACA,MAAMC,eAAc,GAAInB,IAAI,CAACU,QAAQ,CAAC;QACtC,MAAMT,GAAG,CAACkB,eAAe,EAAE;UACzB,GAAGN,YAAY;UACfO,MAAM,EAAEb,IAAI,CAACc;QACf,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CACT,sCAAsC,EACtCJ,eAAe,CAACK,GAClB,CAAC;;QAED;QACA,IAAI,CAACrB,SAAS,CAACH,IAAI,CAAC;UAAE,GAAGa,YAAY;UAAEY,EAAE,EAAEN,eAAe,CAACK;QAAI,CAAC,CAAC;MACnE,EAAE,OAAOE,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACvD;IACF,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG,CAAC,CAAC;IACrB,MAAMC,WAAWA,CAAA,EAAG,CAAC;EACvB,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMrB,EAAC,GAAIZ,WAAW,CAAC,CAAC;IACxB,MAAMa,QAAO,GAAIX,GAAG,CAACU,EAAE,EAAE,QAAQ,CAAC;;IAElC;IACA;IACA,MAAMsB,QAAO,GAAI,MAAMjC,GAAG,CAACY,QAAQ,EAAE,OAAO,CAAC;IAC7C,MAAMP,SAAQ,GAAI,EAAE;IAEpB,IAAI4B,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;MACrBD,QAAQ,CAACE,OAAO,CAAEC,aAAa,IAAK;QAClC,MAAMV,GAAE,GAAIU,aAAa,CAACV,GAAG;QAC7B,MAAMtB,IAAG,GAAIgC,aAAa,CAACC,GAAG,CAAC,CAAC;QAChChC,SAAS,CAACH,IAAI,CAAC;UAAEwB,GAAG;UAAE,GAAGtB;QAAK,CAAC,CAAC;MAClC,CAAC,CAAC;IACJ;IAEA,IAAI,CAACC,SAAQ,GAAIA,SAAS;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}